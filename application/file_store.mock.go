// Code generated by MockGen. DO NOT EDIT.
// Source: 2023_asset_management/application (interfaces: FileStorer)

// Package application is a generated GoMock package.
package application

import (
	domain "2023_asset_management/domain"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockFileStorer is a mock of FileStorer interface.
type MockFileStorer struct {
	ctrl     *gomock.Controller
	recorder *MockFileStorerMockRecorder
}

// MockFileStorerMockRecorder is the mock recorder for MockFileStorer.
type MockFileStorerMockRecorder struct {
	mock *MockFileStorer
}

// NewMockFileStorer creates a new mock instance.
func NewMockFileStorer(ctrl *gomock.Controller) *MockFileStorer {
	mock := &MockFileStorer{ctrl: ctrl}
	mock.recorder = &MockFileStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileStorer) EXPECT() *MockFileStorerMockRecorder {
	return m.recorder
}

// GetPreviewLink mocks base method.
func (m *MockFileStorer) GetPreviewLink(arg0 domain.CloudFile, arg1 domain.CloudFileLocation) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPreviewLink", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPreviewLink indicates an expected call of GetPreviewLink.
func (mr *MockFileStorerMockRecorder) GetPreviewLink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPreviewLink", reflect.TypeOf((*MockFileStorer)(nil).GetPreviewLink), arg0, arg1)
}

// UploadAsset mocks base method.
func (m *MockFileStorer) UploadAsset(arg0 string, arg1 []byte, arg2 domain.CloudFileLocation) (domain.CloudFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadAsset", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain.CloudFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadAsset indicates an expected call of UploadAsset.
func (mr *MockFileStorerMockRecorder) UploadAsset(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadAsset", reflect.TypeOf((*MockFileStorer)(nil).UploadAsset), arg0, arg1, arg2)
}
