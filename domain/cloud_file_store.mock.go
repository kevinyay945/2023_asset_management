// Code generated by MockGen. DO NOT EDIT.
// Source: 2023_asset_management/domain (interfaces: CloudFileStorer)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCloudFileStorer is a mock of CloudFileStorer interface.
type MockCloudFileStorer struct {
	ctrl     *gomock.Controller
	recorder *MockCloudFileStorerMockRecorder
}

// MockCloudFileStorerMockRecorder is the mock recorder for MockCloudFileStorer.
type MockCloudFileStorerMockRecorder struct {
	mock *MockCloudFileStorer
}

// NewMockCloudFileStorer creates a new mock instance.
func NewMockCloudFileStorer(ctrl *gomock.Controller) *MockCloudFileStorer {
	mock := &MockCloudFileStorer{ctrl: ctrl}
	mock.recorder = &MockCloudFileStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudFileStorer) EXPECT() *MockCloudFileStorerMockRecorder {
	return m.recorder
}

// GetCloudFileByNameAndLocation mocks base method.
func (m *MockCloudFileStorer) GetCloudFileByNameAndLocation(arg0 string, arg1 CloudFileLocation) (CloudFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudFileByNameAndLocation", arg0, arg1)
	ret0, _ := ret[0].(CloudFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudFileByNameAndLocation indicates an expected call of GetCloudFileByNameAndLocation.
func (mr *MockCloudFileStorerMockRecorder) GetCloudFileByNameAndLocation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudFileByNameAndLocation", reflect.TypeOf((*MockCloudFileStorer)(nil).GetCloudFileByNameAndLocation), arg0, arg1)
}

// GetPublicLink mocks base method.
func (m *MockCloudFileStorer) GetPublicLink(arg0 CloudFile) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicLink", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicLink indicates an expected call of GetPublicLink.
func (mr *MockCloudFileStorerMockRecorder) GetPublicLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicLink", reflect.TypeOf((*MockCloudFileStorer)(nil).GetPublicLink), arg0)
}

// UploadFile mocks base method.
func (m *MockCloudFileStorer) UploadFile(arg0, arg1 string, arg2 []byte, arg3 CloudFileLocation) (CloudFile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(CloudFile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockCloudFileStorerMockRecorder) UploadFile(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockCloudFileStorer)(nil).UploadFile), arg0, arg1, arg2, arg3)
}
